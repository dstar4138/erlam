#!/usr/bin/env escript
%% DO NOT HAND RUN THIS, IT WILL BE CALLED BY REBAR!

%% Compile Step => Generate headers and then create the runner script.
main(_) ->
    {ok, CURDIR} = file:get_cwd(),
    generate_headers( CURDIR ),
    generate_driver( CURDIR ).


%% Generates headers so the source can reference the internal library location
%% as well as the ErLam Standard Library.
generate_headers( CURDIR ) ->
    generate_lib_header(CURDIR),
    generate_ebin_header(CURDIR).

generate_lib_header( CURDIR ) ->
    Contents = "-define(LIB,[\""++CURDIR++"/lib/std.elib\"]).",
    file:write_file( CURDIR++"/include/gen_lib.hrl", Contents ).

generate_ebin_header( CURDIR ) ->
    Contents = "-define(EBIN_DIR,[\""++CURDIR++"/ebin\"]).",
    file:write_file(CURDIR++"/include/gen_ebin.hrl", Contents ).


%% The Driver application can be symlinked but needs to have an absolute
%% path to the ebin directory.
generate_driver( CURDIR ) ->
    EnvOrWrap = get_runner(),
    Contents = "#!"++EnvOrWrap++" escript\n" ++
               "%%! -pa "++CURDIR++"/ebin -smp\n"++
               "main(A) -> erlam:main(A).\n",
    file:write_file(CURDIR++"/bin/els", Contents).

%% Checks if rlwrap is installed, if it is, then provide that as a wrapper
%% around shell calls to give history options.
get_runner() ->
    case os:cmd("which rlwrap") of
        []   -> "/usr/bin/env";
        Path -> string:strip(Path,right,$\n)
    end.
