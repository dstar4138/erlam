// Parallel Fibonacci -
//
//  Find the 10'th number in the Fibonacci sequence in a parallel fashion.
//  WARNING: Note that this spawns 2 new processes for each recursive call,
//    this is obviously not optimal, but it suffices for example sake.
fun n.(omega
         (fun f,m. 
                if (lt m 1) 
                    m
                    (merge fun _.(f f (sub m 1))
                           fun _.(f f (sub m 2))
                           add)
        n)
10
